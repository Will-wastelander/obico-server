# -----------------------------------------------------------------------------
# Cuda image with cuDNN dev version libraries, required to compile darknet
# Building Darknet-cuda-cudnn image
# -----------------------------------------------------------------------------
FROM nvcr.io/nvidia/cuda:11.4.3-cudnn8-devel-ubuntu20.04 as darknet_builder
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y ca-certificates build-essential gcc g++ cmake git
WORKDIR /
# Lock darknet version for reproducibility
RUN git clone https://github.com/AlexeyAB/darknet && cd darknet && git checkout 59c86222c5387bffd9108a21885f80e980ece234
# compile GPU version
RUN cd darknet \
  && sed -i 's/GPU=0/GPU=1/' Makefile \
  && sed -i 's/CUDNN=0/CUDNN=1/' Makefile \
  && sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile \
  && sed -i 's/LIBSO=0/LIBSO=1/' Makefile \
  && make -j 4 && mv libdarknet.so libdarknet_gpu.so
# compile CPU version
RUN cd darknet \
  && sed -i 's/GPU=1/GPU=0/' Makefile \
  && sed -i 's/CUDNN=1/CUDNN=0/' Makefile \
  && sed -i 's/CUDNN_HALF=1/CUDNN_HALF=0/' Makefile \
  && make -j 4 && mv libdarknet.so libdarknet_cpu.so
# -----------------------------------------------------------------------------
# Cuda image with cuDNN runtime (smaller) without dev packages
# Output: GPU + CPU image
# -----------------------------------------------------------------------------
FROM nvcr.io/nvidia/cuda:11.4.3-cudnn8-runtime-ubuntu20.04 as ml_api_base_amd64

COPY --from=darknet_builder /darknet /darknet

WORKDIR /app
RUN apt update && apt install --no-install-recommends -y ca-certificates python3-pip wget
RUN pip install --upgrade pip
RUN pip install opencv_python_headless onnxruntime-gpu

ADD requirements.txt .
RUN pip install -r requirements.txt

EXPOSE 3333
